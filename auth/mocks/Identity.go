package mocks

import (
	"crypto"

	"github.com/stretchr/testify/mock"
)

import . "gopkg.in/check.v1"

// Identity is an autogenerated mock type for the Identity type
type Identity struct {
	mock.Mock
}

// Expired provides a mock function with given fields:
func (_m *Identity) Expired() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// HasAdminAccess provides a mock function with given fields:
func (_m *Identity) HasAdminAccess() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// HasDFSAccess provides a mock function with given fields:
func (_m *Identity) HasDFSAccess() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// HostID provides a mock function with given fields:
func (_m *Identity) HostID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// PoolID provides a mock function with given fields:
func (_m *Identity) PoolID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// PublicKey provides a mock function with given fields:
func (_m *Identity) PublicKey() crypto.PublicKey {
	ret := _m.Called()

	var r0 crypto.PublicKey
	if rf, ok := ret.Get(0).(func() crypto.PublicKey); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(crypto.PublicKey)
		}
	}

	return r0
}

// Verify provides a mock function with given fields:
func (_m *Identity) Verify() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
